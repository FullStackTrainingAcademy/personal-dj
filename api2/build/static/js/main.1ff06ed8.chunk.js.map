{"version":3,"sources":["utilities/constants.js","assets/personal_dj_logo.png","components/Home.jsx","components/SearchResult.jsx","components/SearchResultList.jsx","assets/loader.svg","components/LoadingAnimation.jsx","utilities/cookieHandler.jsx","utilities/apiErrorHandler.jsx","components/NewPlaylistForm.jsx","components/MediaSearch.jsx","components/Dashboard.jsx","reportWebVitals.js","assets/8-bit-heart.png","components/Footer.jsx","index.js"],"names":["PATHS","Home","className","src","logo","onClick","axios","get","then","r","window","location","href","data","type","SearchResult","trackId","title","imgUrl","artistName","isSelected","showSelected","name","id","SearchResultList","searchResults","setCurrentSelected","useState","selected","setSelected","handleClick","map","result","artist","LoadingAnimation","show","loader","TOKEN_COOKIE","getTokenFromCookies","Cookies","removeCookie","remove","handleError","error","console","message","includes","alert","NewPlaylistForm","seedIds","token","showOptionalInputs","setShowOptionalInputs","danceable","setDanceable","energy","setEnergy","popular","setPopular","limit","setLimit","acoustic","setAcoustic","vocal","setVocal","instrumental","setInstrumental","BPM","setBPM","positivity","setPositivity","listOfRecommendations","setListOfRecommendations","listOfIds","setListOfIds","isLoading","setIsLoading","playlistIsCreated","setPlaylistIsCreated","explicitPlaylistIsCreated","setExplicitPlaylistIsCreated","explicitFilter","setExplicitFilter","dataAsJSON","setDataAsJSON","resetForm","hasPlaylistSavedAlready","displayResults","explicit_filter","length","tempList","tempIds","i","tracks","curr","explicit","track","album","images","url","artists","push","onSubmit","event","preventDefault","params","seed_tracks","danceability","acousticness","speechiness","instrumentalness","tempo","valence","response","trackResult","catch","finally","min","max","step","value","onChange","e","target","required","style","display","confirm","track_list","playlist_id","response2","checked","MediaSearch","searchText","setSearchText","offset","setOffset","results","showResults","resultsList","setResultsList","searchForMedia","track_value","searchOffset","searchResultsAsJSON","tempResultsList","tempImgUrl","tempTitle","fixTrackName","tempArtistName","tempTrackId","loadSearchResults","items","err","inTrackName","regmatch","match","replace","placeholder","Math","Dashboard","query","URLSearchParams","useLocation","search","history","useHistory","newToken","useEffect","set","saveToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","width","heart_image","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.1ff06ed8.chunk.js","sourcesContent":["export const PATHS = {\n  api: \"/api\"\n};\n","export default __webpack_public_path__ + \"static/media/personal_dj_logo.5b25a09b.png\";","import React from \"react\";\nimport {PATHS} from \"../utilities/constants\";\nimport axios from \"axios\";\nimport logo from \"../assets/personal_dj_logo.png\"\n\nconst Home = () => {\n    return (\n        <section>\n            <div className=\"container w-100\">\n                <div className=\"my-5 justify-content-center text-center\">\n                    <div className=\"text-center\">\n                        <img src={logo} className=\"col-1\"/>\n                        <h1 className=\"\">Personal DJ</h1>\n                    </div>\n                    <p>\n                        We use Spotify's secure login to connect to your account. We never\n                        see your email or password, nor do we care to. We just want to find\n                        you some good music.\n                    </p>\n                    <button\n                        onClick={login}\n                        type=\"button\"\n                        className=\"btn btn-primary login-btn col-sm-12 col-lg-6\"\n                    >\n                        Login with Spotify\n                    </button>\n                </div>\n            </div>\n        </section>\n    );\n\n    function login() {\n        axios.get(PATHS.api + \"/login\").then(r => {\n            window.location.href = r.data;\n        })\n    }\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nexport const SearchResult = ({\n  trackId,\n  title,\n  imgUrl,\n  artistName,\n  isSelected,\n  onClick,\n  showSelected,\n}) => {\n  return (\n    <div className=\"col-lg col-sm-3 m-1\">\n      <div\n        className={\n          \"card shadow track my-2 d-block \" +\n          (isSelected && showSelected ? \"selected-track\" : \"\")\n        }\n        name={title}\n        id={trackId}\n        onClick={() => onClick(trackId)}\n      >\n        <img className=\"card-img-top\" src={imgUrl} />\n        <p className=\"card-title py-2\">\n          {title}\n          <br />\n          <i>by {artistName}</i>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { SearchResult } from \"./SearchResult\";\nexport const SearchResultList = ({ searchResults, setCurrentSelected }) => {\n  const [selected, setSelected] = useState(null);\n\n  const handleClick = (id) => {\n    setSelected(id); // Set the selected to show which one is highlighted\n    if (setCurrentSelected != null) setCurrentSelected(id); // Callback function so the parent can have access to the selected id\n  };\n\n  return (\n    <>\n      {searchResults.map((result) => {\n        return (\n          <SearchResult\n            key={result.id}\n            trackId={result.id}\n            title={result.title}\n            imgUrl={result.imgUrl}\n            artistName={result.artist}\n            isSelected={selected === result.id}\n            onClick={handleClick}\n            showSelected={setCurrentSelected != null}\n          />\n        );\n      })}\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loader.bf1608ac.svg\";","import loader from \"../assets/loader.svg\"\nexport const LoadingAnimation = ({show}) => {\n    return (\n        <>\n            {show ? <img src={loader} className=\"m-5\"/> : <></>}\n        </>\n    )\n}","import Cookies from \"js-cookie\";\nconst TOKEN_COOKIE = \"personal_dj_token\";\n\nexport const saveToken = (newToken) => {\n    removeCookie();\n    // Set the cookie to expire in 1 hour (Spotify expiry time)\n    // The \"expires\" value has to be in days, so 1/24 is 1 hour\n    // let inOneHour = 1 / 24;\n    Cookies.set(TOKEN_COOKIE, newToken);\n}\n\nexport const getTokenFromCookies = () => {\n    return Cookies.get(TOKEN_COOKIE);\n}\n\nexport const removeCookie = () => {\n    Cookies.remove(TOKEN_COOKIE);\n}\n\nexport const tokenError = () => {\n    removeCookie();\n}","import {removeCookie} from './cookieHandler'\n\nexport const handleError = (error) => {\n    console.error(error)\n    if (!error || !error.message) {\n        alert(\"Unknown error. Please try refreshing your browser.\");\n        return;\n    }\n    if (error.message.includes(\"401\")) {\n        alert(\"Session expired. Please refresh your browser.\");\n        removeCookie();\n\n    } else {\n        alert(\"Unkown error. Please try again. If issue continues, refresh your browser.\")\n\n    }\n}\n","import axios from \"axios\";\nimport {useState} from \"react\";\nimport {SearchResultList} from \"./SearchResultList\";\nimport {LoadingAnimation} from \"./LoadingAnimation\";\nimport {handleError} from \"../utilities/apiErrorHandler\";\nimport {PATHS} from \"../utilities/constants\";\n\nconst NewPlaylistForm = ({seedIds, token}) => {\n        const [showOptionalInputs, setShowOptionalInputs] = useState(false);\n        const [danceable, setDanceable] = useState(\"\");\n        const [energy, setEnergy] = useState(\"\");\n        const [popular, setPopular] = useState(\"\");\n        const [limit, setLimit] = useState(\"\");\n        const [acoustic, setAcoustic] = useState(\"\");\n        const [vocal, setVocal] = useState(\"\");\n        const [instrumental, setInstrumental] = useState(\"\");\n        const [BPM, setBPM] = useState(\"\");\n        const [positivity, setPositivity] = useState(\"\");\n        const [listOfRecommendations, setListOfRecommendations] = useState([]);\n        const [listOfIds, setListOfIds] = useState([]);\n        // const [listOfNonExplicitRecommendations, setListOfNonExplicitRecommendations] = useState([]);\n        // const [listOfNonExplicitIds, setListOfNonExplicitIds] = useState([]);\n        const [isLoading, setIsLoading] = useState(false);\n        const [playlistIsCreated, setPlaylistIsCreated] = useState(false);\n        const [explicitPlaylistIsCreated, setExplicitPlaylistIsCreated] = useState(false);\n        const [explicitFilter, setExplicitFilter] = useState(false);\n        const [dataAsJSON, setDataAsJSON] = useState();\n\n        // var dataAsJSON_cache = null;\n\n        const searchForRecommendations = (event) => {\n            event.preventDefault();\n\n            setIsLoading(true);\n            resetForm();\n\n            axios\n                .get(PATHS.api + \"/recommendations\", {\n                    params: {\n                        token,\n                        seed_tracks: seedIds,\n                        danceability: danceable / 10,\n                        energy: energy / 10,\n                        popular,\n                        limit,\n                        acousticness: acoustic,\n                        speechiness: vocal,\n                        instrumentalness: instrumental,\n                        tempo: BPM,\n                        valence: positivity,\n                    },\n                })\n                .then((response) => {\n                    displayResults(response.data.trackResult);\n                    setDataAsJSON(response.data.trackResult);\n                    // dataAsJSON_cache = response.data.trackResult\n                })\n                .catch((error) => {\n                    console.error(\"ERROR: /api/recommendations : \", error);\n                    handleError(error);\n                }).finally(() => setIsLoading(false));\n        };\n\n        const resetForm = () => {\n            setPlaylistIsCreated(false);\n            setExplicitPlaylistIsCreated(false);\n            setListOfRecommendations([]);\n            setListOfIds([]);\n            setExplicitFilter(false);\n        }\n\n        const savePlaylist = () => {\n            setIsLoading(true);\n            if (hasPlaylistSavedAlready()) {\n                let confirm = window.confirm(\"This playlist already created do you want to create duplicate playlist?\");\n                if (!confirm) {\n                    setIsLoading(false);\n                    return;\n                }\n            }\n            axios\n                .get(PATHS.api + \"/createPlaylist\", {\n                    params: {\n                        token,\n                    },\n                })\n                .then((response) => {\n                    axios\n                        .get(PATHS.api + \"/addTracks\", {\n                            params: {\n                                track_list: (listOfIds),\n                                playlist_id: response.data.data,\n                                token: token,\n                            },\n                        })\n                        .then((response2) => {\n                            alert(\"Playlist saved!\");\n                            if (explicitFilter) {\n                                setExplicitPlaylistIsCreated(true);\n                            } else {\n                                setPlaylistIsCreated(true);\n                            }\n                        })\n                        .catch((error) => {\n                            // alert(\"Failed to save. See error below.\\n\", error);\n                            handleError(error);\n                        });\n                })\n                .catch((error) => {\n                    handleError(error)\n                }).finally(() => setIsLoading(false));\n        };\n\n        /* Check if the current list of recommendations has already been saved\n        *  False = Playlist has not been saved already */\n        const hasPlaylistSavedAlready = () => {\n            if ((explicitFilter && !explicitPlaylistIsCreated) ||\n                (!playlistIsCreated && !explicitFilter)) {\n                return false;\n            }\n            return true;\n        }\n\n        const displayResults = (dataAsJSON, explicit_filter = false) => {\n            if (!dataAsJSON || dataAsJSON === {} || dataAsJSON.length < 1) {\n                setListOfRecommendations([]);\n                setListOfIds([]);\n                return;\n            }\n            setIsLoading(true);\n            let tempList = [];\n            let tempIds = [];\n            // let tempListNonExplicit = [];\n            // let tempIdsNonExplicit = [];\n            for (let i = 0; i < dataAsJSON.tracks.length; i++) {\n                let curr = dataAsJSON.tracks[i];\n                // If explicit filter is checked, skip the explicit\n                if (explicit_filter && curr.explicit) {\n                    continue;\n                }\n                let track = {\n                    id: curr.id,\n                    title: curr.name,\n                    imgUrl: curr.album.images[0].url,\n                    artist: curr.artists[0].name,\n                    explicit: curr.explicit\n                };\n                // update list of ids of tracks to later add to playlist\n                tempIds.push(track.id);\n                tempList.push(track);\n            }\n            setListOfRecommendations(tempList);\n            setListOfIds(tempIds);\n            setIsLoading(false);\n        }\n\n        // const removeExplicitFromList = (removeExplicit) => {\n        //     if (removeExplicit) {\n        //         for ()\n        //     }\n        // }\n\n        const handleExplicitFilterChange = (event) => {\n            displayResults(dataAsJSON, event.target.checked);\n            setExplicitFilter(event.target.checked);\n        }\n\n        return (\n            <>\n                <form className=\"form-group\" onSubmit={searchForRecommendations}>\n                    <h5>Fine tune your recommendations</h5>\n\n                    <label>\n                        How <i>danceable</i> do you want the recommendations? (0 to 10)\n                    </label>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"10\"\n                            step=\"1\"\n                            id=\"danceability\"\n                            className=\"form-control col-sm-2\"\n                            value={danceable}\n                            onChange={(e) => setDanceable(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <small className=\"form-text text-muted\">\n                        0 = Funeral Music <br/>\n                        10 = Mardi Gras\n                    </small>\n                    <br/>\n\n                    <label>\n                        How <i>H Y P E</i> do you want the recommendations? (0 to 10)\n                    </label>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"10\"\n                            step=\"1\"\n                            id=\"energy\"\n                            className=\"form-control col-sm-2\"\n                            value={energy}\n                            onChange={(e) => setEnergy(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <small className=\"form-text text-muted\">\n                        0 = Beethoven <br/>\n                        10 = Downing 6 cans of Redbull in one sitting\n                    </small>\n                    <br/>\n\n                    <label>\n                        How <i>popular</i> do you want the recommendations? (0 to 100)\n                    </label>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"100\"\n                            step=\"1\"\n                            id=\"popular\"\n                            className=\"form-control col-sm-2\"\n                            value={popular}\n                            onChange={(e) => setPopular(e.target.value)}\n                            required\n                        />\n                    </div>\n\n                    <small className=\"form-text text-muted\">\n                        0 = Literally never heard before <br/>\n                        100 = Your grandma knows the song cause she heard it on the radio 43\n                        times\n                    </small>\n                    <br/>\n\n                    <label>How many songs do you want? (1 to 50)</label>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"50\"\n                            step=\"1\"\n                            id=\"limit\"\n                            className=\"form-control col-sm-2\"\n                            value={limit}\n                            onChange={(e) => setLimit(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"col-sm-12 my-5\">\n                        <h4>\n                            <span className=\"text-\">[OPTIONAL] </span>\n                            Do you want to fine-tune with more inputs?\n                        </h4>\n                        <div className=\"\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-success m-1\"\n                                onClick={() => setShowOptionalInputs(true)}\n                            >\n                                Yes plz gimme control\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-warning m-1 my-2\"\n                                onClick={() => setShowOptionalInputs(false)}\n                            >\n                                nah\n                            </button>\n                        </div>\n                    </div>\n                    <div style={{display: showOptionalInputs ? \"block\" : \"none\"}}>\n                        <h4>\n                            All the inputs below are OPTIONAL. Read the text below the input for\n                            a description of what they do.\n                        </h4>\n                        <label className=\"mt-2\">\n                            <span className=\"text-muted\">[OPTIONAL] </span>\n                            How acoustic do you want the track? (0 to 10)\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"10\"\n                                step=\"1\"\n                                id=\"acousticness\"\n                                className=\"form-control col-sm-2\"\n                                value={acoustic}\n                                onChange={(e) => setAcoustic(e.target.value)}\n                            />\n                        </div>\n                        <small className=\"form-text text-muted\">\n                            0 = 0% Confidence that track is acoustic\n                            <br/>\n                            10 = 100% Confidence that track is acoustic\n                        </small>\n                        <br/>\n\n                        <label className=\"mt-2\">\n                            <span className=\"text-muted\">[OPTIONAL] </span>\n                            How vocal do you want the tracks? (0 to 10)\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"10\"\n                                step=\"1\"\n                                id=\"speechiness\"\n                                className=\"form-control col-sm-2\"\n                                value={vocal}\n                                onChange={(e) => setVocal(e.target.value)}\n                            />\n                        </div>\n                        <small className=\"form-text text-muted\">\n                            Value less than 3 = Music and other non-speech-like tracks\n                            <br/>\n                            Value between 3 and 6 = Music and speech such as rap music <br/>\n                            Value greater than 6 = Talk-show, audio-book, poetry\n                        </small>\n                        <br/>\n\n                        <label className=\"mt-2\">\n                            <span className=\"text-muted\">[OPTIONAL] </span>\n                            How instrumental do you want the tracks? (0 to 10)\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"10\"\n                                step=\"1\"\n                                id=\"instrumentalness\"\n                                className=\"form-control col-sm-2\"\n                                value={instrumental}\n                                onChange={(e) => setInstrumental(e.target.value)}\n                            />\n                        </div>\n                        <small className=\"form-text text-muted\">\n                            Under 5 = Less instrumental <br/>\n                            Greater than 5 = More instrumental\n                        </small>\n                        <br/>\n\n                        <label className=\"mt-2\">\n                            <span className=\"text-muted\">[OPTIONAL] </span>\n                            What BPM (beats per minute) do you want? (0 to 1000)\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"1000\"\n                                step=\"1\"\n                                id=\"tempo\"\n                                className=\"form-control col-sm-2\"\n                                value={BPM}\n                                onChange={(e) => setBPM(e.target.value)}\n                            />\n                        </div>\n                        <small className=\"form-text text-muted\">\n                            Enter BPM as a number between 0 and 1,000\n                        </small>\n                        <br/>\n\n                        <label className=\"mt-2\">\n                            <span className=\"text-muted\">[OPTIONAL] </span>\n                            How much musical positiveness should the tracks have? (0 to 10)\n                        </label>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"10\"\n                                step=\"1\"\n                                id=\"valence\"\n                                className=\"form-control col-sm-2\"\n                                value={positivity}\n                                onChange={(e) => setPositivity(e.target.value)}\n                            />\n                        </div>\n                        <small className=\"form-text text-muted\">\n                            0 = Negative (sad, depressed, angry) <br/>\n                            10 = Positive (happy, cheerful, euphoric)\n                        </small>\n                        <br/>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-warning m-2 mb-4\"\n                            onClick={() => setShowOptionalInputs(false)}\n                        >\n                            Cancel Optional Inputs\n                        </button>\n                        <hr/>\n                    </div>\n                    <button className=\"btn btn-success text-white\" type=\"submit\">\n                        Get Recommendations\n                    </button>\n                </form>\n                {\n                    dataAsJSON != null &&\n                    (\n                        <div>\n                            <button\n                                className=\"btn btn-success text-white my-3 p-4\"\n                                onClick={savePlaylist}\n                            >\n                                Save as a Playlist\n                            </button>\n                            <form>\n                                <div className=\"custom-control custom-checkbox mb-3\">\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"custom-control-input\"\n                                        checked={explicitFilter}\n                                        onChange={handleExplicitFilterChange}\n                                    />\n                                    <label className=\"custom-control-label mx-1\">\n                                        Filter explicit content\n                                    </label>\n                                </div>\n                            </form>\n                        </div>)\n                }\n                <div>{listOfIds.length + \" tracks found\"}</div>\n                <LoadingAnimation show={isLoading}/>\n                <div className=\"search-results\">\n                    {(!isLoading &&\n                        < SearchResultList\n                            searchResults={listOfRecommendations}\n                            setCurrentSelected={null}\n                        />)}\n                </div>\n            </>\n        );\n    }\n;\n\nexport default NewPlaylistForm;\n","import {useState} from \"react\";\nimport axios from \"axios\";\nimport {SearchResultList} from \"./SearchResultList\";\nimport {handleError} from '../utilities/apiErrorHandler'\nimport {PATHS} from \"../utilities/constants\";\nimport {LoadingAnimation} from \"./LoadingAnimation\";\n\nconst MediaSearch = ({token, setSelected}) => {\n        const [searchText, setSearchText] = useState(\"\");\n        const [offset, setOffset] = useState(5);\n        const [results, showResults] = useState(false);\n        const [resultsList, setResultsList] = useState([]);\n        const [isLoading, setIsLoading] = useState(false);\n\n        function searchForMedia(event) {\n            if (event) event.preventDefault();\n            setIsLoading(true);\n            setResultsList([]);\n            setSelected(null);\n\n            axios\n                .get(PATHS.api + \"/trackSearch\", {\n                    params: {\n                        track_value: searchText,\n                        searchOffset: offset,\n                        token: token,\n                    },\n                })\n                .then((response) => {\n                    loadSearchResults(response.data.trackResult.tracks.items);\n                }).catch((err) => {\n                handleError(err);\n            }).finally(() => setIsLoading(false));\n        }\n\n        function loadSearchResults(searchResultsAsJSON) {\n            let tempResultsList = [];\n            // Parse JSON and create them into components\n            for (let i = 0; i < searchResultsAsJSON.length; i++) {\n                let tempImgUrl =\n                    searchResultsAsJSON[i].album.images[0].url ||\n                    \"https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg\";\n                let tempTitle = fixTrackName(\n                    searchResultsAsJSON[i].name || \"Title Not Found\"\n                );\n                let tempArtistName =\n                    searchResultsAsJSON[i].artists[0].name || \"Artist Not Found\";\n                let tempTrackId = searchResultsAsJSON[i].id || null;\n                tempResultsList.push({\n                    title: tempTitle,\n                    id: tempTrackId,\n                    artist: tempArtistName,\n                    imgUrl: tempImgUrl,\n                });\n            }\n            setResultsList(tempResultsList);\n            showResults(true);\n        }\n\n        // function that fixes a track name that has quotes\n        function fixTrackName(inTrackName) {\n            let regmatch = /\\\\([\\s\\S])|(\")/g;\n\n            if (inTrackName != \"Title Not Found\" && inTrackName.match(regmatch)) {\n                return inTrackName.replace(regmatch, \"&quot;\");\n            }\n            return inTrackName;\n        }\n\n        const loadLessResults = (event) => {\n            setOffset(Math.max(0, offset - 5));\n            searchForMedia(event);\n        };\n\n        const loadMoreResults = (event) => {\n            setOffset(Math.max(0, offset + 5));\n            searchForMedia(event);\n        };\n\n        return (\n            <>\n                <form className=\"container\" onSubmit={searchForMedia}>\n                    <label>Search for a track:</label>\n                    <br/>\n                    <input\n                        className=\"w-75\"\n                        type=\"text\"\n                        placeholder=\"Track name...\"\n                        onChange={(e) => setSearchText(e.target.value)}\n                        required\n                    />\n                    <br/>\n                    <button className=\"my-3 px-5 btn btn-success\" type=\"submit\">\n                        Search\n                    </button>\n                </form>\n                <LoadingAnimation show={isLoading}/>\n                {resultsList.length > 0 ? (\n                    <div className=\"search-results p-4\">\n                        <div className=\"\">\n                            <SearchResultList\n                                searchResults={resultsList}\n                                setCurrentSelected={setSelected}\n                            />\n                        </div>\n                        <div className=\"my-4\">\n                            <ul className=\"row pagination justify-content-center\">\n                                <li className=\"page-item\" onClick={loadLessResults}>\n                                    <a className=\"btn btn-success text-white\"> Show Last 5 </a>\n                                </li>\n                                <li className=\"px-2\">Don't See Your Track?</li>\n                                <li className=\"page-item\" onClick={loadMoreResults}>\n                                    <a className=\"btn btn-success text-white\">Show Next 5</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ) : ((results && !isLoading) ?\n                    <h3 className=\"my-3 text-white\">No tracks found</h3> : <></>)}\n            </>\n        );\n    }\n;\nexport default MediaSearch;\n","import {useHistory, useLocation} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport Cookies from \"js-cookie\";\nimport NewPlaylistForm from \"./NewPlaylistForm\";\nimport MediaSearch from \"./MediaSearch\";\nimport {saveToken, getTokenFromCookies, tokenError} from '../utilities/cookieHandler'\n\nconst Dashboard = () => {\n    const [selected, setSelected] = useState(null);\n    const query = new URLSearchParams(useLocation().search);\n    const history = useHistory();\n    const newToken = query.get(\"token\");\n    useEffect(() => {\n        if (newToken) {\n            saveToken(newToken);\n            // Hide user token so they don't accidentally copy paste it out\n            history.replace({search: \"\"});\n        } else if (!getTokenFromCookies()) {\n            tokenError();\n            history.replace(\"/\");\n        }\n    }, []);\n\n    // Need to implement child callbacks: https://linguinecode.com/post/get-child-component-state-from-parent-component\n    return (\n        <div className=\"container-lg py-1 text-center\">\n            <h1>Create a new Playlist!</h1>\n            <MediaSearch\n                token={getTokenFromCookies()}\n                setSelected={setSelected}\n            />\n            {(selected &&\n                <NewPlaylistForm seedIds={selected} token={getTokenFromCookies()}/>)}\n        </div>\n    );\n};\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/8-bit-heart.663f7e33.png\";","import React from \"react\";\nimport heart_image from \"../assets/8-bit-heart.png\"\n\nconst Footer = () => {\n    return (\n        <footer className=\"text-center my-5\">\n            <hr/>\n            <p>\n                Made with\n                <img className=\"mx-1\" width=\"20px\" src={heart_image}/> by\n                <a\n                    href=\"https://github.com/RyanRussell00/personal-dj/blob/master/CONTRIBUTORS.md\"\n                    target=\"_blank\"\n                    className=\"mx-1\"\n                >\n                    Our Contributors\n                </a>\n            </p>\n            <p>\n                This is an open source project.\n                <a href=\"https://github.com/RyanRussell00/personal-dj\" className=\"mx-1\">\n                    Contribute now!\n                </a>\n            </p>\n            <small>Version 2.0 -- Now with extra cheese!</small>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./components/Home\";\nimport PlaylistCreator from \"./components/Dashboard\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/dashboard\" exact>\n          <PlaylistCreator />\n        </Route>\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}